/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package loanSection;

import accounting.manager.ConnectionObject;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author lenovo
 */
public class PaymentHistory extends javax.swing.JFrame {

    private String gName ;
    private PreparedStatement stmt, updatePro, remove, remove1;
    private Connection conn;
    private float profit =0;
    public PaymentHistory(LoanManager parent, String name) {
        gName = name;
        initComponents();
        setLocationRelativeTo(null);
        historyFrame.setText("History of Mr. "+ gName);
        DefaultTableModel model = new DefaultTableModel() {
            public boolean isCellEditable(int row, int c) {
                return false;
            }
        };
        model.addColumn("Date");
        model.addColumn("Amount paid");
        model.addColumn("Type");
        historyTable.setModel(model);
        historyTable.getColumnModel().getColumn(0).setPreferredWidth(70);
        historyTable.getColumnModel().getColumn(1).setMinWidth(70);
        historyTable.getColumnModel().getColumn(2).setMinWidth(70);
        
        try{
            conn = ConnectionObject.myConn.getConnection();
            stmt = conn.prepareStatement("select amount, tarik from cmoneydetail where cname = ? order by tarik");
            updatePro = conn.prepareStatement("insert into cprofit values(?, ?, ?, ?)");
            remove = conn.prepareStatement("delete from cdetail where cname = ?");
            remove1 = conn.prepareStatement("delete from cmoneydetail  where cname = ?");
            showDetails();
        }catch(Exception e){
            e.printStackTrace();
        }
        
        addWindowListener(new WindowAdapter()
            {
                @Override
                public void windowClosing(WindowEvent e)
                {
                    parent.enableMe();
                }
            });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        invest = new javax.swing.JLabel();
        historyFrame = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        historyTable = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        receive = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setText("Total Investment Made");

        invest.setText("0.0");

        historyFrame.setText("history");

        historyTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(historyTable);

        jLabel2.setText("Total Return");

        receive.setText("0.0");

        jButton1.setText("close this account");
        jButton1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.darkGray, java.awt.Color.lightGray, java.awt.Color.white, java.awt.Color.black));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(historyFrame, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(invest, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 293, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(receive, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(59, 59, 59)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(72, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(historyFrame)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 389, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(invest))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(receive)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        updateProfit();
        JOptionPane.showMessageDialog(this, "Account Succesfully closed.\nProfit made "+profit);
        jButton1.setEnabled(false);
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel historyFrame;
    private javax.swing.JTable historyTable;
    private javax.swing.JLabel invest;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel receive;
    // End of variables declaration//GEN-END:variables

    private void showDetails() throws Exception{
        Object row[] = new Object[3];
        Date date;
        String type = "";
        float amt=0, given=0, taken=0;
        stmt.setString(1, gName);
        ResultSet rs = stmt.executeQuery();
        DefaultTableModel addRow =  (DefaultTableModel)historyTable.getModel();
        addRow.setRowCount(0);
        while(rs.next()){
            date = rs.getDate("tarik");
            amt = rs.getFloat("amount");
            
            if(amt>=0){
                type = "Investment";
                given += amt;
            }else{
                type = "Received";
                amt = -1*amt;
                taken += amt;
            }
            row[0] = date;
            row[1] = amt;
            row[2] = type;
            addRow.addRow(row);
            
        }
        profit = taken - given;
        invest.setText(Float.toString(given));
        receive.setText(Float.toString(taken));
    }

    private void updateProfit() {
        Date date = new Date();
        Calendar cal = new GregorianCalendar();
        cal.setTime(date);
        
        int m, year;
        m = cal.get(Calendar.MONTH);
        year = cal.get(Calendar.YEAR);
        String mnth = accounting.manager.Month.month[m];
        try{
            updatePro.setString(1, gName);
            updatePro.setFloat(2, profit);
            updatePro.setString(3, mnth);
            updatePro.setInt(4, year);
            updatePro.executeUpdate();
            
            remove.setString(1, gName);
            remove.executeUpdate();
            
            remove1.setString(1, gName);
            remove1.executeUpdate();
        }catch(Exception e){
            e.printStackTrace();
        }
        
    }
}
