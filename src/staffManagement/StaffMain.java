/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package staffManagement;

import accounting.manager.ConnectionObject;
import accounting.manager.Item;
import accounting.manager.MainPage;
import static accounting.manager.MainPage.items;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.ListModel;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;

/**
 *
 * @author lenovo
 */
public class StaffMain extends javax.swing.JFrame {

    private String[] defaultValues ;
    Staff []staff;
    int staffCount = 0;
    Statement stmt , attend;
    Connection conn;
    PreparedStatement updateAmt, money;
    
    public StaffMain(MainPage parent) {
        
        
        try{
            conn = ConnectionObject.myConn.getConnection();
            stmt = conn.createStatement();
            updateAmt = conn.prepareStatement("update staffdetail set amtDue = ? where sname = ?");
            money = conn.prepareStatement("insert into moneydetail values(?, ?, CURDATE())");
            attend = conn.createStatement();
            getDetails();
        }catch(Exception e){
            e.printStackTrace();
        }
        setContentPane(new JLabel(new ImageIcon(getClass().getResource("/extras/logStaff.jpg"))));
        initComponents();
        setLocationRelativeTo(null);
        
        addWindowListener(new WindowAdapter()
            {
                public void windowClosing(WindowEvent e)
                {
                    parent.enableMe();
                }
            });
        
        
        DateTimeFormatter dtf = DateTimeFormatter.ofPattern("dd/MM/yyyy");
        LocalDate localDate = LocalDate.now();
        dateFrame.setText(dtf.format(localDate));
        
        //System.out.println();
        if(staffCount != 0)
            addFilter();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        half = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        nameFrame = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList();
        jButton5 = new javax.swing.JButton();
        amountFrame = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        full = new javax.swing.JButton();
        dateFrame = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jButton1.setText("Add a new Staff");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton3.setText("Pay to staff");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        half.setText("half");
        half.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                halfActionPerformed(evt);
            }
        });

        jLabel1.setText("Staff List ");

        jList1.setModel(createDefaultListModel());
        jList1.setVisibleRowCount(6);
        jList1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jList1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jList1);

        jButton5.setText("Update Staff Details");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jLabel2.setText("Amount");

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/extras/refresh.jpeg"))); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        full.setText("Full");
        full.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fullActionPerformed(evt);
            }
        });

        dateFrame.setText("Date");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(98, 98, 98)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(nameFrame, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(237, 237, 237)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(full, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(half, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGap(52, 52, 52)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(amountFrame, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton3)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(dateFrame, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(dateFrame)
                                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(14, 14, 14)
                                .addComponent(jButton1))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(53, 53, 53)
                                .addComponent(jLabel2)
                                .addGap(9, 9, 9)
                                .addComponent(amountFrame, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addComponent(jButton3))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(nameFrame, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(full)
                    .addComponent(half))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton5)
                .addContainerGap(99, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        staffEntry s = new staffEntry(this);
        s.setVisible(true);
        setEnabled(false);
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        String name = nameFrame.getText();
        
        UpdateStaff obj = new UpdateStaff(this, name);
        obj.setVisible(true);
        setEnabled(false);
        
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        
        try{
            String name = nameFrame.getText();
            float amt = Float.parseFloat(amountFrame.getText());
            if(amt<=0){
                return ;
            }
            adjustDetail(name, amt);
        }catch(Exception e){
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jList1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jList1MouseClicked
        nameFrame.setText(jList1.getSelectedValue().toString());
    }//GEN-LAST:event_jList1MouseClicked

    private void halfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_halfActionPerformed
        
        String name = nameFrame.getText();
         makeAttendence(name, 'h');
        
    }//GEN-LAST:event_halfActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        getDetails();
        jList1.setModel(createDefaultListModel());
        addFilter();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void fullActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fullActionPerformed
        String name = nameFrame.getText();
        makeAttendence(name, 'f');
    }//GEN-LAST:event_fullActionPerformed

  public void enableMe(){
        setEnabled(true);
        setVisible(true);
    }
  
  
   private void getDetails() {
        
        try{
            ResultSet result = stmt.executeQuery("Select * from staffDetail order by sname");
            defaultValues = new String[0];
            if(result.last()){
                staffCount = result.getRow();
                result.beforeFirst();
                staff = new Staff[staffCount];
                defaultValues = new String[staffCount];
            }
            int i = 0;
            while(result.next()){
                staff[i] = new Staff();
                staff[i].name = result.getString("sname");
                staff[i].phone = result.getString("phone");
                staff[i].address = result.getString("address");
                staff[i].hRate = result.getFloat("rateh");
                staff[i].fRate = result.getFloat("ratef");
                staff[i].amtDue = result.getFloat("amtDue");
                
                defaultValues[i] = staff[i].name;
                i++;
            }
        }catch(Exception e){
            System.out.println("getDetails");
            e.printStackTrace();
        }
        
        
    }
    
    
    private void addFilter(){
        nameFrame.getDocument().addDocumentListener(new DocumentListener(){
            @Override public void insertUpdate(DocumentEvent e) { filter(); }
            @Override public void removeUpdate(DocumentEvent e) { filter(); }
            @Override public void changedUpdate(DocumentEvent e) {}
            private void filter() {
                String filter = nameFrame.getText();
                filterModel((DefaultListModel<String>)jList1.getModel(), filter);
            }
        });
 }
                
    private ListModel<String> createDefaultListModel() {
        DefaultListModel<String> model = new DefaultListModel<>();
        for (String s : defaultValues) {
            model.addElement(s);
        }
        return model;
    }

    public void filterModel(DefaultListModel<String> model, String filter) {
        for (String s : defaultValues) {
            if (!s.startsWith(filter)) {
                if (model.contains(s)) {
                    model.removeElement(s);
                }
            } else {
                if (!model.contains(s)) {
                    model.addElement(s);
                }
            }
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField amountFrame;
    private javax.swing.JLabel dateFrame;
    private javax.swing.JButton full;
    private javax.swing.JButton half;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JList jList1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField nameFrame;
    // End of variables declaration//GEN-END:variables

    private void adjustDetail(String name, float amt) {
        try {
            float newAmt = adjustLocal(name, amt);
            updateAmt.setFloat(1, newAmt);
            updateAmt.setString(2, name);
            updateAmt.executeUpdate();
            
            money.setString(1, name);
            money.setFloat(2, amt);
            money.executeUpdate();
        } catch (SQLException ex) {
            Logger.getLogger(StaffMain.class.getName()).log(Level.SEVERE, null, ex);
        }
        clearAll();
    }

    
    
    private float adjustLocal(String name, float amt) {
        for(int i =0; i<staff.length; ++i){
            if(name.equalsIgnoreCase(staff[i].name)){
                staff[i].amtDue = staff[i].amtDue - amt;
                return(staff[i].amtDue);
            }
        }
        return 0;
    }

    private void clearAll() {
        nameFrame.setText("");
        amountFrame.setText("");
    }
    

    private void makeAttendence(String name, char c) {
        float amt=0;
        try {
            attend.executeUpdate("insert into "+name +" values(curdate(), '"+ c+"')");
        } catch (SQLException ex){ 
            JOptionPane.showMessageDialog(this, "Already marked for the day");
            Logger.getLogger(StaffMain.class.getName()).log(Level.SEVERE, null, ex);
            return;
        }
        for(int i =0; i<staff.length; ++i){
            if(name.equalsIgnoreCase(staff[i].name)){
                if(c == 'h')
                    amt = staff[i].hRate;
                else
                    amt = staff[i].fRate;
                
                staff[i].amtDue = staff[i].amtDue + amt;
                amt = staff[i].amtDue;
                break;
            }
        }
        
        try {
            updateAmt.setFloat(1, amt);
            updateAmt.setString(2, name);
            updateAmt.executeUpdate();
            
        } catch (SQLException ex) {
            Logger.getLogger(StaffMain.class.getName()).log(Level.SEVERE, null, ex);
        }
        
       
    }
}
